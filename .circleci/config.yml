version: 2

jobs:
  build:
    docker:
      - image: circleci/buildpack-deps:bionic

    steps:
      - restore_cache:
          name: Restore Hugo
          keys:
            - v2-hugo-0.91.1

      - run:
          name: Install Hugo
          command: |
            if [[ ! -d ~/hugo ]]; then
              mkdir ~/hugo
              curl -fsSL https://github.com/gohugoio/hugo/releases/download/v0.91.2/hugo_extended_0.91.2_Linux-64bit.tar.gz \
                > /tmp/hugo.tar.gz
              tar x -C ~/hugo -f /tmp/hugo.tar.gz
            fi

      - save_cache:
          name: Cache Hugo
          paths:
            - ~/hugo
          key: v2-hugo-0.83.0

      - checkout

      - run:
          name: Check out submodules
          command: |
            git submodule sync
            git submodule update --init

      - run:
          name: Build
          command: make public
          environment:
            PATH: ~/hugo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

      - persist_to_workspace:
          root: .
          paths:
            - public

  deploy-infrastructure:
    docker:
      - image: hashicorp/terraform

    steps:
      - checkout

      - run:
          name: Initialize Terraform
          command: terraform init

      - run:
          name: Deploy infrastructure
          command: terraform apply -auto-approve

  deploy-site:
    docker:
      - image: cimg/base:stable

    steps:
      - checkout

      - run:
          name: Install the AWS CLI
          command: |
            mkdir /tmp/aws
            cd /tmp/aws
            curl 'https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip' -o 'awscliv2.zip'
            unzip -q awscliv2.zip
            sudo ./aws/install

      - attach_workspace:
          at: .

      - run:
          name: Push to AWS S3
          command: aws s3 sync public s3://monospacedmonologues.com --acl=public-read --delete

      - run:
          name: Refresh AWS CloudFront
          command: |
            distribution_id="$(aws cloudfront list-distributions | jq -r --arg domain 'monospacedmonologues.com' '.DistributionList.Items | .[] | select(.Aliases.Items | index($domain)) | .Id')"
            aws cloudfront create-invalidation --distribution-id "$distribution_id" --paths '/*'

workflows:
  version: 2

  deploy:
    jobs:
      - build

      - deploy-infrastructure:
          context: Deployment
          filters:
            branches:
              only:
                - main

      - deploy-site:
          requires:
            - build
            - deploy-infrastructure
          context: Deployment
          filters:
            branches:
              only:
                - main
